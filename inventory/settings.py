"""
Django settings for inventory project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import django_heroku
import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3($k@*%sem-oyc5z$@q9ih84&e2(=%_tr5d#u6pl-r84#s5u5&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'auths.apps.AuthsConfig',
    #'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'shop.apps.ShopConfig',
    'pos.apps.PosConfig',
    'cart.apps.CartConfig',
    'manage.apps.ManageConfig',
    'supermanager.apps.SupermanagerConfig',
    'coupons.apps.CouponsConfig',
    'orders.apps.OrdersConfig',
    'crispy_forms',
    'chartjs',
    'django_countries',
    'payment.apps.PaymentConfig',
    'django.contrib.humanize',
    'bootstrap_datepicker_plus',
]

BOOTSTRAP4 = {
    'include_jquery': True,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CART_SESSION_ID = 'cart'

AUTH_USER_MODEL = 'auths.User'

CRISPY_TEMPLATE_PACK = 'bootstrap4'

ROOT_URLCONF = 'inventory.urls'


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'inventory.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# JAZZMIN_SETTINGS = {
#     # title of the window
#     'site_title': '',
#
#     # Title on the brand, and the login screen (19 chars max)
#     'site_header': 'Cosmetic shop',
#
#     # square logo to use for your site, must be present in static files, used for favicon and brand on top left
#     #'site_logo': '',
#
#     # Welcome text on the login screen
#     'welcome_sign': 'Welcome to Admin panel',
#
#     # Copyright on the footer
#     'copyright': 'Cosmetic shop',
#
#     # The model admin to search from the search bar, search bar omitted if excluded
#     'search_model': 'auth.User',
#
#     # Field name on user model that contains avatar image
#     'user_avatar': None,
#
#     ############
#     # Top Menu #
#     ############
#
#     # Links to put along the top menu
#     'topmenu_links': [
#
#         # Url that gets reversed (Permissions can be added)
#         {'name': 'Home',  'url': 'admin:index', 'permissions': ['auth.view_user']},
#
#         # external url that opens in a new window (Permissions can be added)
#         {'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},
#
#         # model admin to link to (Permissions checked against model)
#         {'model': 'auth.User'},
#
#         # App with dropdown menu to all its models pages (Permissions checked against models)
#         {'app': 'polls'},
#     ],
#
#     #############
#     # User Menu #
#     #############
#
#     # Additional links to include in the user menu on the top right ('app' url type is not allowed)
#     'usermenu_links': [
#         {'name': 'Support', 'url': 'https://github.com/farridav/django-jazzmin/issues', 'new_window': True},
#         {'model': 'auth.user'}
#     ],
#
#     #############
#     # Side Menu #
#     #############
#
#     # Whether to display the side menu
#     'show_sidebar': True,
#
#     # Whether to aut expand the menu
#     'navigation_expanded': True,
#
#     # Hide these apps when generating side menu e.g (auth)
#     'hide_apps': [],
#
#     # Hide these models when generating side menu (e.g auth.user)
#     'hide_models': [],
#
#     # List of apps to base side menu ordering off of (does not need to contain all apps)
#     'order_with_respect_to': ['accounts', 'polls'],
#
#     # Custom links to append to app groups, keyed on app name
#     'custom_links': {
#         'polls': [{
#             'name': 'Make Messages',
#             'url': 'make_messages',
#             'icon': 'fas fa-comments',
#             'permissions': ['polls.view_poll']
#         }]
#     },
#
#     # Custom icons for side menu apps/models See https://www.fontawesomecheatsheet.com/font-awesome-cheatsheet-5x/
#     # for a list of icon classes
#     'icons': {
#         'auth': 'fas fa-users-cog',
#         'auth.user': 'fas fa-user',
#         'auth.Group': 'fas fa-users',
#     },
#     # Icons that are used when one is not manually specified
#     'default_icon_parents': 'fas fa-chevron-circle-right',
#     'default_icon_children': 'fas fa-circle',
#
#     #############
#     # UI Tweaks #
#     #############
#     # Relative paths to custom CSS/JS scripts (must be present in static files)
#     "custom_css": None,
#     "custom_js": None,
#     # Whether to show the UI customizer on the sidebar
#     "show_ui_builder": False,
#
#     ###############
#     # Change view #
#     ###############
#     # Render out the change view as a single form, or in tabs, current options are
#     # - single
#     # - horizontal_tabs (default)
#     # - vertical_tabs
#     # - collapsible
#     # - carousel
#     "changeform_format": "horizontal_tabs",
#     # override change forms on a per modeladmin basis
#     "changeform_format_overrides": {"auth.user": "collapsible", "auth.group": "vertical_tabs",},
# }
#
# # Braintree settings
BRAINTREE_MERCHANT_ID = '324234'  # Merchant ID
BRAINTREE_PUBLIC_KEY = '423423'   # Public Key
BRAINTREE_PRIVATE_KEY = '324234'  # Private key

import braintree

BRAINTREE_CONF = braintree.Configuration(
    braintree.Environment.Sandbox,
    BRAINTREE_MERCHANT_ID,
    BRAINTREE_PUBLIC_KEY,
    BRAINTREE_PRIVATE_KEY
)


LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),
)


REDIS_HOST = 'localhost'
REDIS_PORT = 6379
REDIS_DB = 1

# django_heroku.settings(locals())


STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'staticfiles')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static/'),
]

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

LOGIN_REDIRECT_URL = 'homepage'
LOGIN_URL = 'login'
LOGOUT_URL = 'homepage'


django_heroku.settings(locals())
